openapi: 3.0.0
info:
  version: 1.0.0
  title: Galera do Vôlei
  description: API para aplicação Galera do Vôlei.
servers:
  - url: https://localhost:8080
paths:
  /players:
    get:
      description: Return all players. Filters and limiters apply.
      operationId: findPlayers
      parameters:
        - name: name
          in: query
          description: name to filter by
          required: false
          style: form
          schema:
            type: string
        - name: genre
          in: query
          description: genre to filter by
          required: false
          style: form
          schema:
            type: string
        - name: category
          in: query
          description: category  to filter by
          required: false
          style: form
          schema:
            type: string
        - name: limit
          in: query
          description: maximum number of results to return
          required: false
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: player response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Player'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      description: Add a new player
      operationId: addPlayer
      requestBody:
        description: Player to add
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewPlayer'
      responses:
        '200':
          description: player response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Player'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /players/{id}:
    get:
      description: Returns a player based on a single ID
      operationId: findPlayerId
      parameters:
        - name: id
          in: path
          description: ID of player to fetch
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: player response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Player'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      description: Deletes a single player based on the ID supplied
      operationId: deletePlayer
      parameters:
        - name: id
          in: path
          description: ID of player to delete
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: player deleted
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /matches:
    get:
      description: Return all matches. Filters and limiters apply.
      operationId: findMatch
      parameters:
        - name: date
          in: query
          description: date to filter by
          required: false
          style: form
          schema:
            type: string
        - name: genre
          in: query
          description: genre to filter by
          required: false
          style: form
          schema:
            type: string
        - name: category
          in: query
          description: category  to filter by
          required: false
          style: form
          schema:
            type: string
        - name: limit
          in: query
          description: maximum number of results to return
          required: false
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: match response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Match'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      description: Add a new match
      operationId: addMatch
      requestBody:
        description: Match to add
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewMatch'
      responses:
        '200':
          description: match response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Match'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    patch:
      description: Marks a match as finished
      operationId: addMatch
      requestBody:
        description: Match to change status
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Match'
      responses:
        '200':
          description: match response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Match'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /matches/{id}:
    get:
      description: Returns a match based on a single ID
      operationId: findMatchId
      parameters:
        - name: id
          in: path
          description: ID of match to fetch
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: match response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Match'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      description: Deletes a single match based on the ID supplied
      operationId: deleteMatch
      parameters:
        - name: id
          in: path
          description: ID of match to delete
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: match deleted
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
components:
  schemas:
    Player:
      allOf:
        - $ref: '#/components/schemas/NewPlayer'
        - type: object
          required:
            - id
          properties:
            id:
              type: integer
              format: int64
    Match:
      allOf:
        - $ref: '#/components/schemas/NewMatch'
        - type: object
          required:
            - id
            - status
          properties:
            id:
              type: integer
              format: int64
            status:
              type: integer
              format: int64
    NewPlayer:
      type: object
      required:
        - name
      properties:
        name:
          type: string
        genre:
          type: string
        category:
          type: string
    NewMatch:
      type: object
      required:
        - date
      properties:
        date:
          type: string
        genre:
          type: string
        category:
          type: string
    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
